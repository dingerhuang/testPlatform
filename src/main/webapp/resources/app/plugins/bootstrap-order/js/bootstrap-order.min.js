(function (c, d, e) {
    var f = {
        ui: {
            createDialog: function () {
                var g = '<div class="panel panel-primary panel-order">' + '   <div class="panel-heading">' + '       <span order-type="title">Bootstrap Sort</span>' + '       <div class="dropdown pull-right">' + '           <button class="btn btn-info btn-xs" type="button" id="btn-order" ">' + '              确定' + "           </button>" + '           <ul class="dropdown-menu order-menu" role="menu" order-type="menu" aria-labelledby="orderDropdownMenuSetting">' + '               <li role="presentation" order-type="menu-expanse" class="disabled"><a role="menuitem" tabindex="-1" href="#"><span class="glyphicon glyphicon-indent-left"> Expanse</span></a></li>' + '               <li role="presentation" order-type="menu-collapse"><a role="menuitem" tabindex="-1" href="#"><span class="glyphicon glyphicon-indent-right"> Collapse</span></a></li>' + '               <li role="presentation" order-type="menu-operation"><a role="menuitem" tabindex="-1" href="#"><span class="glyphicon glyphicon-question-sign"> Operation</span></a></li>' + "           </ul>" + "       </div>" + "   </div>" + '   <div class="panel-body">' + '       <ul class="list-group order-list-title" order-type="list-title">' + '           <li class="list-group-item">' + '               <span order-type="name">OrginalNum - Name</span>' + '               <span class="pull-right" order-type="realNum">RealNum</span>' + "           </li>" + "       </ul>" + '       <ul class="list-group order-list" order-type="list"></ul>' + "   </div>" + "</div>";
                return d(g)
            }, createRow: function () {
                var g = '<li class="list-group-item" title="双击移除记录">' + '   <div class="input-group">' + '       <span class="form-control col-th-6 order-name" order-type="name"></span>' + '       <span class="form-control form-split col-th-3"><span></span></span>' + '       <span class="form-control col-th-3 order-num">' + '           <input type="text" class="form-control order-num" value="1" title="1" order-type="num" />' + "       </span>" + "   </div>" + "</li>";
                return d(g)
            }, createTip: function () {
                var g = '<span class="order-tip" order-type="tip"></span>';
                return d(g)
            }, autoSizeUI: function (i) {
                var g = d(".panel-heading", i), h = d(".panel-body", i);
                h.css({"height": i.height() - g.outerHeight()});
                return f
            }
        }, menu: {
            collapse: function (k, j, i) {
                var l = !!k.data("order-menu-expanse"), h = d("[order-type='list']", k), g = d("[order-type='list-title']", k);
                if (!l && !k.is(":animated")) {
                    k.animate({"width": 140}, 500, function () {
                        k.data("order-menu-expanse", true);
                        j.toggleClass("disabled");
                        i.toggleClass("disabled")
                    });
                    h.animate({"left": "-=180px"}, 500);
                    g.animate({"left": "-=180px"}, 500)
                }
                return f
            }, expanse: function (l, j, i) {
                var k = !l.data("order-menu-expanse"), h = d("[order-type='list']", l), g = d("[order-type='list-title']", l);
                if (!k && !l.is(":animated")) {
                    l.animate({"width": 320}, 500, function () {
                        l.data("order-menu-expanse", false);
                        j.toggleClass("disabled");
                        i.toggleClass("disabled")
                    });
                    h.animate({"left": "+=180px"}, 500);
                    g.animate({"left": "+=180px"}, 500)
                }
                return f
            }, showOperation: function () {
                var h = d(document), g = h.data("order-menu-operation") || (function () {
                        var i = f.ui.createTip().html('<span class="alert alert-info alert-dismissable">' + '   <button type="button" class="close">&times;</button>' + "   <p>操作说明:</p> " + "   <p>1、可以点击方框通过拖拽方式进行排序操作</p> " + "   <p>2、也可以在输入框中输入序号后按回车键或是移开焦点自动排序</p> " + "   <p>   如果是向后排序则会插入到相比较小(或相同)的最近排序框之后</p> " + "   <p>   如果是向前排序则会插入到相比较大(或相同)的最近排序框之前</p> " + "</span>").appendTo("body");
                        i.find(".close").off("click").on("click", function () {
                            i.fadeOut(300)
                        });
                        h.data("order-menu-operation", i);
                        return i
                    }());
                g.fadeIn(300);
                return f
            }
        }, util: {
            isNumeric: function (g) {
                return g && typeof +g === "number" && /^\d+$/.test(g)
            }
        }, bindEvt: function (j) {
            var g = d("[order-type='menu']", j), k = d("[order-type='menu-expanse']", g), o = d("[order-type='menu-collapse']", g), p = d("[order-type='menu-operation']", g), r = d("[order-type='list']", j), s = d(".list-group-item", r), h = d("[order-type='num']", r), l = (function () {
                var t = j.data("order-methods") || {};
                return {
                    sortByInputNumber: d.isFunction(t.sortByInputNumber) ? t.sortByInputNumber : function () {
                    }, removeItem: d.isFunction(t.removeItem) ? t.removeItem : function () {
                    }
                }
            }());
            k.off("click").on("click", function () {
                f.menu.expanse(j, k, o)
            });
            o.off("click").on("click", function () {
                f.menu.collapse(j, k, o)
            });
            p.off("click").on("click", function () {
                f.menu.showOperation()
            });
            h.off("focus").on("focus", function () {
                var t = d(this);
                t.data("orginalValue", t.val()).parent().addClass("focus")
            }).off("blur").on("blur", function () {
                var u = d(this), v = u.data("orginalValue");
                u.parent().removeClass("focus");
                var t = d.trim(u.val());
                if (!f.util.isNumeric(t) || +t <= 0) {
                    u.val(v)
                } else {
                    u.val(t);
                    if (t !== v) {
                        l.sortByInputNumber(+v, +t)
                    }
                }
            }).off("mousedown").on("mousedown", function () {
                d(this).focus().select();
                return false
            }).off("keydown").on("keydown", function (u) {
                var t = d(this);
                u = u || c.event;
                if (u.keyCode === b.keyCode.ENTER) {
                    t.blur()
                }
            });
            var n = d(document), m = d("body"), i = {
                onMove: (function () {
                    return d.isFunction(j.data("order-move-events-onMove")) ? j.data("order-move-events-onMove") : function () {
                    }
                }()), onUp: (function () {
                    return d.isFunction(j.data("order-move-events-onUp")) ? j.data("order-move-events-onUp") : function () {
                    }
                }())
            }, q = {
                mouseMove: function (v) {
                    var x = n.data("order-move-page"), t = {
                        x: v.pageX,
                        y: v.pageY
                    }, u = n.data("order-move-item"), w = u.offset();
                    u.offset({top: w.top + (t.y - x.y)});
                    n.data("order-move-page", t);
                    i.onMove(u, w, t.y > x.y ? "down" : "up")
                }, mouseUp: function (u) {
                    var t = n.data("order-move-item");
                    n.removeData("order-move-page");
                    n.removeData("order-move-item");
                    n.off("mousemove", q.mouseMove);
                    n.off("mouseup", q.mouseUp);
                    m.off("selectstart", q.docSelected).removeClass("select-none");
                    i.onUp(t)
                }, docSelected: function () {
                    return false
                }
            };
            s.off("mousedown").on("mousedown", function (v) {
                var t = d(this), u = {x: v.pageX, y: v.pageY};
                t.siblings().removeClass("hold");
                if (!t.hasClass("hold")) {
                    t.addClass("hold")
                }
                n.off("mousemove", q.mouseMove).on("mousemove", q.mouseMove);
                n.off("mouseup", q.mouseUp).on("mouseup", q.mouseUp);
                n.data("order-move-item", t);
                n.data("order-move-page", u);
                m.on("selectstart", q.docSelected).addClass("select-none")
            }).off("dblclick").on("dblclick", function () {
                var t = d(this).data("order-itemObject");
                l.removeItem(t.item.id)
            })
        }
    }, b = {
        index: 1, keyCode: {ENTER: 13}, itemHeight: (function () {
            var k = f.ui.createDialog().css("left", -9999).appendTo("body").show(), h = d("[order-type='list']", k), g = f.ui.createRow().appendTo(h), i = f.ui.createRow().appendTo(h), j = +(g.css("margin-top") || "0px").replace(/px/, ""), l = +(g.css("margin-bottom") || "0px").replace(/px/, ""), m = g.outerHeight() + j + l;
            k.remove();
            return m
        }())
    },
        a = (function () {
        var h = {$dialog: null, $list: null, itemArray: []}, g, i = function (j) {
            g = this;
            this.setting = d.extend(true, {}, this.setting, j);
            var k = f.ui.createDialog().hide().appendTo("body");
            f.ui.autoSizeUI(k);
            f.bindEvt(k);
            d.extend(true, h, {$dialog: k, $list: d("[order-type='list']", k)});
            this.setProp();
            return this
        };
        return d.extend(true, i, {
            prototype: {
                setting: {prop: {title: "排序", name: "排序项", realNum: "序号"}},
                setProp: function (j) {
                    d.extend(true, this.setting.prop, j);
                    h.$dialog.find("[order-type='title']").html(this.setting.prop.title);
                    h.$dialog.find("[order-type='name']").html(this.setting.prop.name);
                    h.$dialog.find("[order-type='realNum']").html(this.setting.prop.realNum);
                    return this
                },
                show: function () {
                    var j = h.$dialog;
                    j.show().css({"left": "-" + j.outerWidth() + "px"}).animate({"left": 0}, 500);
                    return this
                },
                hide: function (j) {
                    var l = h.$dialog, k = this;
                    l.animate({"left": "-" + l.outerWidth() + "px"}, 500, function () {
                        l.hide();
                        if (j !== false) {
                            h.$list.empty();
                            delete h.itemArray;
                            h.itemArray = []
                        }
                    });
                    return this
                },
                toggleShow: function () {
                    var j = h.$dialog;
                    if (j.is(":hidden")) {
                        this.show()
                    } else {
                        this.hide(arguments[0])
                    }
                    return this
                },
                containItem: function (m) {
                    var k, j;
                    if (m && typeof m === "object") {
                        for (k = 0, j = h.itemArray.length; k < j; k++) {
                            if (h.itemArray[k].item.id === m.id) {
                                return true
                            }
                        }
                    }
                    return false
                },
                removeItem: function (o) {
                    var n, m, k;
                    for (n = 0, k = h.itemArray.length; n < k; n++) {
                        if (h.itemArray[n].item.id === o) {
                            h.itemArray[n].$row.fadeOut(300, function () {
                                d(this).remove()
                            });
                            for (m = k - 1; m > n; m--) {
                                h.itemArray[m].index = h.itemArray[m - 1].index;
                                h.itemArray[m].realNum = h.itemArray[m - 1].realNum
                            }
                            h.itemArray.splice(n, 1);
                            g.doSort(false, null);
                            break
                        }
                    }
                    return g
                },
                showMsg: function (k) {
                    var j = f.ui.createTip().appendTo(d("body"));
                    j.append("<span>" + k + "</span>").fadeIn(300, function () {
                        setTimeout(function () {
                            j.fadeOut(300, function () {
                                j.remove()
                            })
                        }, 3000)
                    });
                    return this
                },
                addItem: function (t) {
                    if (this.containItem(t)) {
                        return this.showMsg("Record already exists")
                    }
                    var k = h.$dialog, o = h.$list, p = f.ui.createRow(), j = h.itemArray, u = this, s = 0, m = null, r = {
                        onMove: function (H, C, y) {
                            var D = C.top + (y === "down" ? 0 : b.itemHeight / 2), I = C.top + b.itemHeight - (y === "up" ? 0 : b.itemHeight / 2), E, B, z, G = H.data("order-itemObject"), F = G.realNum, x = H.attr("orderId"), v, w, A = false;
                            if (m !== null && s !== 0 && m === y) {
                                if (y === "down" && s > D - b.itemHeight / 2) {
                                    return this
                                } else {
                                    if (y === "up" && s < D + b.itemHeight / 2) {
                                        return this
                                    }
                                }
                            }
                            for (E = 0, B = j.length; E < B; E++) {
                                if (j[E].$row.attr("orderId") === x) {
                                    v = E;
                                    continue
                                }
                                z = j[E].$row.offset().top + (y === "down" ? 0 : b.itemHeight);
                                if (D < z && z < I) {
                                    j[E].$row.addClass("hover");
                                    A = true;
                                    w = E;
                                    m = y;
                                    s = D
                                } else {
                                    j[E].$row.removeClass("hover")
                                }
                            }
                            if (A) {
                                G.realNum = j[w].realNum;
                                j[w].realNum = F;
                                j[v] = j[w];
                                j[w] = G;
                                j[v].$row.find("[order-type='num']").val(F).attr("title", F);
                                j[w].$row.find("[order-type='num']").val(G.realNum).attr("title", G.realNum);
                                u.doSort(false, H)
                            }
                        }, onUp: function (v) {
                            s = 0;
                            m = null;
                            u.doSort(true, null)
                        }
                    }, l = {
                        sortByInputNumber: function (B, z) {
                            var y, w, A, x, C, v;
                            for (y = 0, w = j.length; y < w; y++) {
                                if (j[y].realNum === B) {
                                    A = y
                                }
                                if (j[y].realNum <= z) {
                                    x = y
                                }
                            }
                            if (j[0].realNum > z) {
                                x = 0
                            }
                            if (A !== x) {
                                C = j[A];
                                v = j[x].realNum;
                                if (A < x) {
                                    for (y = x, w = A + 1; y >= w; y--) {
                                        j[y].realNum = j[y - 1].realNum
                                    }
                                    j[A].realNum = v;
                                    for (y = A + 1, w = x; y <= w; y++) {
                                        j[y - 1] = j[y];
                                        j[y - 1].index = y - 1
                                    }
                                } else {
                                    for (y = x, w = A - 1; y <= w; y++) {
                                        j[y].realNum = j[y + 1].realNum
                                    }
                                    j[A].realNum = v;
                                    for (y = A - 1, w = x; y >= w; y--) {
                                        j[y + 1] = j[y]
                                    }
                                }
                                j[x] = C;
                                u.doSort(true, null)
                            }
                        }, removeItem: u.removeItem
                    }, q, n;
                    t = d.extend(true, {id: -1, name: "", num: -1}, t);
                    d("[order-type='name']", p).html(t.num + " - " + t.name).attr("title", t.num + " - " + t.name);
                    d("[order-type='num']", p).val(t.num).attr("title", t.num);
                    p.attr("orderId", "order_" + b.index++);
                    o.append(p);
                    k.data("order-move-events-onMove", r.onMove);
                    k.data("order-move-events-onUp", r.onUp);
                    k.data("order-methods", l);
                    f.bindEvt(h.$dialog);
                    q = {index: h.itemArray.length, $row: p, item: t, realNum: t.num};
                    p.data("order-itemObject", q);
                    if (h.itemArray.length === 0) {
                        h.itemArray.push(q)
                    } else {
                        for (n = h.itemArray.length - 1; n >= 0; n--) {
                            if (h.itemArray[n].item.num < q.item.num) {
                                h.itemArray.splice(n + 1, 0, q);
                                break
                            }
                        }
                        if (n < 0) {
                            h.itemArray.unshift(q)
                        }
                    }
                    this.recovery();
                    return this
                },
                recovery: function () {
                    var k, j;
                    for (k = 0, j = h.itemArray.length; k < j; k++) {
                        h.itemArray[k].realNum = h.itemArray[k].item.num;
                        h.itemArray[k].$row.find("[order-type='num']").val(h.itemArray[k].item.num)
                    }
                    this.doSort(true, null);
                    return this
                },
                doSort: function (m, r) {
                    var q, p, k, n, o = !!r;
                    if (m === true) {
                        for (q = 0, k = h.itemArray.length; q < k; q++) {
                            n = h.itemArray[q];
                            for (p = q + 1; p < k; p++) {
                                if (h.itemArray[p].realNum < n.realNum) {
                                    h.itemArray[q] = h.itemArray[p];
                                    h.itemArray[p] = n;
                                    n = h.itemArray[q]
                                }
                            }
                        }
                    }
                    for (q = 0, k = h.itemArray.length; q < k; q++) {
                        if (r && r.attr("orderId") === h.itemArray[q].$row.attr("orderId")) {
                            continue
                        }
                        h.itemArray[q].$row.stop().animate({top: b.itemHeight * q}, o ? 100 : 300).find("[order-type='num']").val(h.itemArray[q].realNum)
                    }
                    return this
                },
                getData: function () {
                    var k = h.itemArray, m, j, n = [], o;
                    for (m = 0, j = k.length; m < j; m++) {
                        o = k[m];
                        n.push({id: o.item.id, name: o.item.name, num: o.realNum})
                    }
                    return n
                }
            }
        })
    }());
    c["BootstrapOrder"] = a;
    d(function () {
    })
}(window, jQuery));